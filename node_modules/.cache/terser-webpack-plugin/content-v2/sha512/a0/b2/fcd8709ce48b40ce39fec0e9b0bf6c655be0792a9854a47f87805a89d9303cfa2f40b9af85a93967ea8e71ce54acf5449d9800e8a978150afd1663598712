{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\SG0304986\\\\my-app\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\SG0304986\\\\my-app\\\\src\\\\search-component.js\",\"C:\\\\Users\\\\SG0304986\\\\my-app\\\\src\\\\index.js\"],\"names\":[\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"Search\",\"_this\",\"this\",\"react_default\",\"a\",\"createElement\",\"InputGroup\",\"className\",\"FormControl\",\"placeholder\",\"aria-label\",\"aria-describedby\",\"value\",\"props\",\"searchValue\",\"onChange\",\"e\",\"searchValueOnChange\",\"React\",\"Component\",\"Covid\",\"_React$Component\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"handleSearchValueOnChange\",\"bind\",\"assertThisInitialized\",\"state\",\"covidData\",\"displayedData\",\"deathCount\",\"recoverCount\",\"inherits\",\"createClass\",\"key\",\"tableData\",\"forEach\",\"data\",\"casesToday\",\"concat\",\"cases\",\"todayCases\",\"deathsToday\",\"deaths\",\"todayDeaths\",\"push\",\"Alert\",\"variant\",\"Heading\",\"country\",\"recovered\",\"isEmpty\",\"Spinner\",\"as\",\"animation\",\"size\",\"role\",\"aria-hidden\",\"Table\",\"hover\",\"responsive\",\"Badge\",\"getTableBody\",\"Accordion\",\"Card\",\"Toggle\",\"Header\",\"eventKey\",\"Collapse\",\"Body\",\"filter\",\"toLowerCase\",\"indexOf\",\"target\",\"setState\",\"getDisplayedData\",\"getHeader\",\"search_component_Search\",\"getTable\",\"getSpinner\",\"_this2\",\"document\",\"title\",\"fetch\",\"then\",\"results\",\"json\",\"totalCountObj\",\"active\",\"critical\",\"obj\",\"unshift\",\"ReactDOM\",\"render\",\"src_Covid\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport InputGroup from 'react-bootstrap/InputGroup';\\r\\nimport Button from 'react-bootstrap/Button';\\r\\nimport FormControl from 'react-bootstrap/FormControl';\\r\\n\\r\\nexport default class Search extends React.Component {\\r\\n\\r\\n    render() {\\r\\n        return(\\r\\n            <div>\\r\\n                <InputGroup className=\\\"mb-3\\\">\\r\\n    <FormControl\\r\\n      placeholder=\\\"Search for a country..\\\"\\r\\n      aria-label=\\\"Recipient's username\\\"\\r\\n      aria-describedby=\\\"basic-addon2\\\"\\r\\n      value={this.props.searchValue}\\r\\n      onChange={e => this.props.searchValueOnChange(e)}\\r\\n    />\\r\\n  </InputGroup>\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n\\r\\n}\\r\\n\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport './index.css';\\r\\nimport Button from 'react-bootstrap/Button';\\r\\nimport 'bootstrap/dist/css/bootstrap.min.css';\\r\\nimport  get  from 'lodash/get';\\r\\nimport  filter  from 'lodash/filter';\\r\\nimport forEach from 'lodash/forEach';\\r\\nimport  isEmpty  from 'lodash/isEmpty';\\r\\nimport Container from 'react-bootstrap/Container';\\r\\nimport Accordion from 'react-bootstrap/Accordion';\\r\\nimport Spinner from 'react-bootstrap/Spinner';\\r\\nimport Card from 'react-bootstrap/Card';\\r\\nimport Row from 'react-bootstrap/Row';\\r\\nimport Col from 'react-bootstrap/Col';\\r\\nimport Table from 'react-bootstrap/Table';\\r\\nimport Badge from 'react-bootstrap/Badge';\\r\\nimport Alert from 'react-bootstrap/Alert';\\r\\nimport * as serviceWorker from './serviceWorker';\\r\\nimport { KeyObject } from 'crypto';\\r\\nimport Search from './search-component';\\r\\n\\r\\nexport class Covid extends React.Component {\\r\\n  constructor(props) {\\r\\n\\t\\tsuper(props);\\r\\n\\t\\tthis.handleSearchValueOnChange = this.handleSearchValueOnChange.bind(this);\\r\\n    this.state = {\\r\\n\\t\\t\\tcovidData: {},\\r\\n\\t\\t\\tdisplayedData: {},\\r\\n\\t\\t\\tsearchValue: \\\"\\\",\\r\\n\\t\\t\\tdeathCount: \\\"\\\",\\r\\n\\t\\t\\trecoverCount: \\\"\\\",\\r\\n    };\\r\\n\\t}\\r\\n\\r\\n\\tgetTableBody() {\\r\\n\\t\\tlet tableData = [];\\r\\n\\t\\tforEach(this.state.displayedData, (data, key) => {\\r\\n\\t\\t\\tconst casesToday = `${data.cases} | ${data.todayCases}`;\\r\\n\\t\\t\\tconst deathsToday = `${data.deaths} | ${data.todayDeaths}`;\\r\\n\\t\\t\\ttableData.push(\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<Alert variant=\\\"primary\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Alert.Heading>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{data.country}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</Alert.Heading>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<hr />\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</Alert>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<Alert variant=\\\"primary\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Alert.Heading>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{casesToday}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</Alert.Heading>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<hr />\\r\\n\\t\\t\\t\\t\\t\\t</Alert>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<Alert variant=\\\"success\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Alert.Heading>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{data.recovered}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</Alert.Heading>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<hr />\\r\\n\\t\\t\\t\\t\\t\\t</Alert>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<Alert variant=\\\"danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Alert.Heading>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{deathsToday}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</Alert.Heading>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<hr />\\r\\n\\t\\t\\t\\t\\t\\t</Alert>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t);\\r\\n\\t});\\r\\n\\t\\treturn tableData;\\r\\n\\t}\\r\\n\\r\\n\\tgetSpinner() {\\r\\n\\t\\tif (isEmpty(this.state.covidData)) {\\r\\n\\t\\t\\treturn (\\r\\n\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<Spinner\\r\\n\\t\\t\\t\\t\\t\\tas=\\\"span\\\"\\r\\n\\t\\t\\t\\t\\t\\tanimation=\\\"grow\\\"\\r\\n\\t\\t\\t\\t\\t\\tsize=\\\"md\\\"\\r\\n\\t\\t\\t\\t\\t\\trole=\\\"status\\\"\\r\\n\\t\\t\\t\\t\\t\\taria-hidden=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\tLoading...\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tgetTable() {\\r\\n\\t\\treturn (\\r\\n\\t\\t\\t<Table\\r\\n\\t\\t\\thover\\r\\n\\t\\t\\tvariant=\\\"dark\\\"\\r\\n\\t\\t\\tresponsive\\r\\n\\t\\t\\tsize=\\\"sm\\\">\\r\\n\\t\\t\\t <thead>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<th>\\r\\n\\t\\t\\t\\t\\t<Badge variant=\\\"light\\\"\\r\\n\\t\\t\\t\\t\\t\\tclassName=\\\"covid__table-header\\\"\\r\\n\\t\\t\\t\\t\\t>Country</Badge>\\r\\n\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t<th><Badge variant=\\\"light\\\"\\r\\n\\t\\t\\t\\t\\t\\tclassName=\\\"covid__table-header\\\"\\r\\n\\t\\t\\t\\t\\t>Cases (Total | Today)</Badge></th>\\r\\n\\t\\t\\t\\t\\t<th><Badge variant=\\\"light\\\"\\r\\n\\t\\t\\t\\t\\t\\tclassName=\\\"covid__table-header\\\"\\r\\n\\t\\t\\t\\t\\t>Recovered</Badge></th>\\r\\n\\t\\t\\t\\t\\t<th><Badge variant=\\\"light\\\"\\r\\n\\t\\t\\t\\t\\t\\tclassName=\\\"covid__table-header\\\"\\r\\n\\t\\t\\t\\t\\t>Deaths (Total | Today)</Badge></th>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t </thead>\\r\\n\\t\\t\\t <tbody>\\r\\n\\t\\t\\t\\t {this.getTableBody()}\\r\\n\\t\\t\\t </tbody>\\r\\n\\t\\t\\t</Table>\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\tgetHeader() {\\r\\n\\t\\treturn(\\r\\n\\t\\t\\t<div className=\\\"covid__full-data-body\\\">\\r\\n\\t\\t\\t\\t<Accordion>\\r\\n  <Card>\\r\\n    <Accordion.Toggle as={Card.Header} eventKey=\\\"0\\\">\\r\\n      Global Coronavirus Information\\r\\n    </Accordion.Toggle>\\r\\n    <Accordion.Collapse eventKey=\\\"0\\\">\\r\\n\\t\\t\\t<Card.Body>\\r\\n\\t\\t\\t\\tThe data is updated every 24 hours and has been taken from official WHO statistics\\r\\n\\t\\t\\t\\t<hr />\\r\\n\\t\\t\\t\\tStay Home. Stay Safe\\r\\n\\t\\t\\t</Card.Body>\\r\\n    </Accordion.Collapse>\\r\\n  </Card>\\r\\n</Accordion>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\tgetDisplayedData(searchValue) {\\r\\n\\t\\tconst displayedData = filter(this.state.covidData, (data, key) => {\\r\\n\\t\\t\\tconst country = data.country.toLowerCase();\\r\\n\\t\\t\\treturn country.indexOf(searchValue.toLowerCase()) === 0;\\r\\n\\t\\t});\\r\\n\\t\\treturn displayedData;\\r\\n\\t}\\r\\n\\r\\n\\thandleSearchValueOnChange(e) {\\r\\n\\t\\tconst searchValue = e.target.value;\\r\\n\\t\\tthis.setState({\\r\\n\\t\\t\\tsearchValue: searchValue,\\r\\n\\t\\t\\tdisplayedData: this.getDisplayedData(searchValue)\\r\\n\\t\\t});\\r\\n\\t}\\r\\n\\r\\n  render(){\\r\\n\\r\\n\\t\\t/*let options = [];\\r\\n\\t\\tif (!isEmpty(covid)) {\\r\\n\\t\\t\\tforEach(covid, (data, value) => {\\r\\n\\t\\t\\t\\t\\tconsole.log(data, value);\\r\\n\\t\\t\\t\\t\\tconsole.log(\\\"jell\\\");\\r\\n\\t\\t\\t});\\r\\n\\t\\t}*/\\r\\n\\r\\n\\t  return (\\r\\n\\t\\t\\t<div className=\\\"covid__body\\\">\\r\\n\\t\\t\\t\\t{this.getHeader()}\\r\\n\\t\\t\\t\\t<div className=\\\"covid__search-component\\\">\\r\\n\\t\\t\\t\\t\\t<Search\\r\\n\\t\\t\\t\\t\\t\\tsearchValue={this.state.searchValue}\\r\\n\\t\\t\\t\\t\\t\\tsearchValueOnChange={this.handleSearchValueOnChange}\\r\\n\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div className = \\\"covid__table\\\">\\r\\n\\t\\t\\t\\t\\t\\t{this.getTable()}\\r\\n\\t\\t\\t\\t\\t\\t{this.getSpinner()}\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n    );\\r\\n\\t}\\r\\n\\tcomponentDidMount(){\\r\\n\\t\\tdocument.title = \\\"Covid Update\\\";\\r\\n\\t\\t/*fetch('https://pomber.github.io/covid19/timeseries.json')\\r\\n\\t\\t.then(results => {\\r\\n\\t\\t\\t\\treturn results.json();\\r\\n\\t\\t}).then(data => {\\r\\n\\t\\t\\tthis.setState({\\r\\n\\t\\t\\t\\tcovidData: data\\r\\n\\t\\t\\t});\\r\\n\\t\\t});*/\\r\\n\\r\\n\\t\\t// https://api.covid19india.org/state_district_wise.json\\r\\n\\t\\t// https://api.covid19india.org/data.json\\r\\n\\r\\n\\t\\tfetch('https://coronavirus-19-api.herokuapp.com/countries')\\r\\n\\t\\t.then(results => {\\r\\n\\t\\t\\t\\treturn results.json();\\r\\n\\t\\t}).then(data => {\\r\\n\\t\\t\\tlet totalCountObj = {\\r\\n\\t\\t\\t\\tcountry: 'All Countries',\\r\\n\\t\\t\\t\\tcases: 0,\\r\\n\\t\\t\\t\\ttodayCases: 0,\\r\\n\\t\\t\\t\\tdeaths: 0,\\r\\n\\t\\t\\t\\ttodayDeaths: 0,\\r\\n\\t\\t\\t\\trecovered: 0,\\r\\n\\t\\t\\t\\tactive: 0,\\r\\n\\t\\t\\t\\tcritical: 0\\r\\n\\t\\t\\t};\\r\\n\\t\\t\\tlet processData = function(){\\r\\n\\r\\n\\t\\t\\t\\tdata.forEach(function(obj){\\r\\n\\t\\t\\t\\t\\ttotalCountObj.cases += obj.cases;\\r\\n\\t\\t\\t\\t\\ttotalCountObj.todayCases += obj.todayCases;\\r\\n\\t\\t\\t\\t\\ttotalCountObj.deaths += obj.deaths;\\r\\n\\t\\t\\t\\t\\ttotalCountObj.todayDeaths += obj.todayDeaths;\\r\\n\\t\\t\\t\\t\\ttotalCountObj.recovered += obj.recovered;\\r\\n\\t\\t\\t\\t\\ttotalCountObj.active += obj.active;\\r\\n\\t\\t\\t\\t\\ttotalCountObj.critical += obj.critical;\\r\\n\\t\\t\\t\\t});\\r\\n\\t\\t\\t\\tdata.unshift(totalCountObj);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tprocessData();\\r\\n\\t\\t\\tthis.setState({\\r\\n\\t\\t\\t\\tcovidData: data,\\r\\n\\t\\t\\t\\tdisplayedData: data\\r\\n\\t\\t\\t});\\r\\n\\t\\t});\\r\\n  }\\r\\n}\\r\\n\\r\\nReactDOM.render(\\r\\n  <Covid />,\\r\\n  document.getElementById('root')\\r\\n);\\r\\n\\r\\nserviceWorker.unregister();\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{150:function(e,a,t){e.exports=t(334)},155:function(e,a,t){},243:function(e,a){},245:function(e,a){},279:function(e,a){},280:function(e,a){},334:function(e,a,t){\"use strict\";t.r(a);var n=t(50),r=t(51),l=t(57),c=t(52),i=t(56),o=t(35),s=t(0),u=t.n(s),d=t(34),h=t.n(d),m=(t(155),t(157),t(87),t(141)),v=t.n(m),E=t(142),y=t.n(E),f=t(143),p=t.n(f),g=t(58),b=t(146),C=t(59),O=t(147),D=t(38),k=t(17);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));t(240);var _=t(144),w=t(148),j=function(e){function a(){return Object(n.a)(this,a),Object(l.a)(this,Object(c.a)(a).apply(this,arguments))}return Object(i.a)(a,e),Object(r.a)(a,[{key:\"render\",value:function(){var e=this;return u.a.createElement(\"div\",null,u.a.createElement(_.a,{className:\"mb-3\"},u.a.createElement(w.a,{placeholder:\"Search for a country..\",\"aria-label\":\"Recipient's username\",\"aria-describedby\":\"basic-addon2\",value:this.props.searchValue,onChange:function(a){return e.props.searchValueOnChange(a)}})))}}]),a}(u.a.Component);t.d(a,\"Covid\",function(){return S});var S=function(e){function a(e){var t;return Object(n.a)(this,a),(t=Object(l.a)(this,Object(c.a)(a).call(this,e))).handleSearchValueOnChange=t.handleSearchValueOnChange.bind(Object(o.a)(Object(o.a)(t))),t.state={covidData:{},displayedData:{},searchValue:\"\",deathCount:\"\",recoverCount:\"\"},t}return Object(i.a)(a,e),Object(r.a)(a,[{key:\"getTableBody\",value:function(){var e=[];return y()(this.state.displayedData,function(a,t){var n=\"\".concat(a.cases,\" | \").concat(a.todayCases),r=\"\".concat(a.deaths,\" | \").concat(a.todayDeaths);e.push(u.a.createElement(\"tr\",null,u.a.createElement(\"td\",null,u.a.createElement(k.a,{variant:\"primary\"},u.a.createElement(k.a.Heading,null,a.country),u.a.createElement(\"hr\",null))),u.a.createElement(\"td\",null,u.a.createElement(k.a,{variant:\"primary\"},u.a.createElement(k.a.Heading,null,n),u.a.createElement(\"hr\",null))),u.a.createElement(\"td\",null,u.a.createElement(k.a,{variant:\"success\"},u.a.createElement(k.a.Heading,null,a.recovered),u.a.createElement(\"hr\",null))),u.a.createElement(\"td\",null,u.a.createElement(k.a,{variant:\"danger\"},u.a.createElement(k.a.Heading,null,r),u.a.createElement(\"hr\",null)))))}),e}},{key:\"getSpinner\",value:function(){if(p()(this.state.covidData))return u.a.createElement(\"div\",null,u.a.createElement(b.a,{as:\"span\",animation:\"grow\",size:\"md\",role:\"status\",\"aria-hidden\":\"true\"}),\"Loading...\")}},{key:\"getTable\",value:function(){return u.a.createElement(O.a,{hover:!0,variant:\"dark\",responsive:!0,size:\"sm\"},u.a.createElement(\"thead\",null,u.a.createElement(\"tr\",null,u.a.createElement(\"th\",null,u.a.createElement(D.a,{variant:\"light\",className:\"covid__table-header\"},\"Country\")),u.a.createElement(\"th\",null,u.a.createElement(D.a,{variant:\"light\",className:\"covid__table-header\"},\"Cases (Total | Today)\")),u.a.createElement(\"th\",null,u.a.createElement(D.a,{variant:\"light\",className:\"covid__table-header\"},\"Recovered\")),u.a.createElement(\"th\",null,u.a.createElement(D.a,{variant:\"light\",className:\"covid__table-header\"},\"Deaths (Total | Today)\")))),u.a.createElement(\"tbody\",null,this.getTableBody()))}},{key:\"getHeader\",value:function(){return u.a.createElement(\"div\",{className:\"covid__full-data-body\"},u.a.createElement(g.a,null,u.a.createElement(C.a,null,u.a.createElement(g.a.Toggle,{as:C.a.Header,eventKey:\"0\"},\"Global Coronavirus Information\"),u.a.createElement(g.a.Collapse,{eventKey:\"0\"},u.a.createElement(C.a.Body,null,\"The data is updated every 24 hours and has been taken from official WHO statistics\",u.a.createElement(\"hr\",null),\"Stay Home. Stay Safe\")))))}},{key:\"getDisplayedData\",value:function(e){return v()(this.state.covidData,function(a,t){return 0===a.country.toLowerCase().indexOf(e.toLowerCase())})}},{key:\"handleSearchValueOnChange\",value:function(e){var a=e.target.value;this.setState({searchValue:a,displayedData:this.getDisplayedData(a)})}},{key:\"render\",value:function(){return u.a.createElement(\"div\",{className:\"covid__body\"},this.getHeader(),u.a.createElement(\"div\",{className:\"covid__search-component\"},u.a.createElement(j,{searchValue:this.state.searchValue,searchValueOnChange:this.handleSearchValueOnChange})),u.a.createElement(\"div\",{className:\"covid__table\"},this.getTable(),this.getSpinner()))}},{key:\"componentDidMount\",value:function(){var e=this;document.title=\"Covid Update\",fetch(\"https://coronavirus-19-api.herokuapp.com/countries\").then(function(e){return e.json()}).then(function(a){var t={country:\"All Countries\",cases:0,todayCases:0,deaths:0,todayDeaths:0,recovered:0,active:0,critical:0};a.forEach(function(e){t.cases+=e.cases,t.todayCases+=e.todayCases,t.deaths+=e.deaths,t.todayDeaths+=e.todayDeaths,t.recovered+=e.recovered,t.active+=e.active,t.critical+=e.critical}),a.unshift(t),e.setState({covidData:a,displayedData:a})})}}]),a}(u.a.Component);h.a.render(u.a.createElement(S,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[150,2,1]]]);","extractedComments":[]}